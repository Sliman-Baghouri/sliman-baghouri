if (self.CavalryLogger) { CavalryLogger.start_js_script(document.currentScript); }

__d("NullStateNotifications",["IconSource"],(function(a,b,c,d,e,f,g){"use strict";a={dark:new(c("IconSource"))("nullStateGlyphs","/images/comet/empty_states_icons/notifications/null_states_notifications_dark_mode.svg",112),"default":new(c("IconSource"))("nullStateGlyphs","/images/comet/empty_states_icons/notifications/null_states_notifications_gray_wash.svg",112)};g["default"]=a}),98);
__d("CometNoNotifications.react",["fbt","CometContentArea.react","NullStateNotifications","TetraNullState.react","react","requireDeferred"],(function(a,b,c,d,e,f,g,h){"use strict";var i=d("react"),j=d("react").useEffect,k=c("requireDeferred")("NoNotificationsFalcoEvent").__setRef("CometNoNotifications.react");function a(a){var b=a.loggingSurface,d=a.userId;j(function(){k.onReady(function(a){a=a.log;return a(function(){return{ref:b,user_id:d}})})},[b,d]);return i.jsx(c("CometContentArea.react"),{verticalAlign:"middle",children:i.jsx(c("TetraNullState.react"),{"data-testid":void 0,headline:h._(/*FBT_CALL*/"You have no notifications"/*FBT_CALL*/),icon:c("NullStateNotifications")})})}a.displayName=a.name+" [from "+f.id+"]";g["default"]=a}),98);
__d("CometNotificationsInteractionLoggingContext",["react"],(function(a,b,c,d,e,f,g){"use strict";a=d("react");b=d("react");var h=b.useMemo,i=b.useRef;c=function(){var a=i(!1),b=h(function(){return{notifsLoadCompleteRef:a}},[a]);return b};e=a.createContext({notifsLoadCompleteRef:{current:!1}});g.useInteractionLoggingRefs=c;g.CometNotificationsInteractionLoggingContext=e}),98);
__d("CometNotificationsContext",["react"],(function(a,b,c,d,e,f,g){"use strict";a=d("react");b=a.createContext({renderLocation:null});g["default"]=b}),98);
__d("CometNotificationsRenderLocations",[],(function(a,b,c,d,e,f){"use strict";a="dropdown";b="rail";f.DROPDOWN=a;f.RAIL=b}),66);
__d("CometNotificationsScrollHoldingContainer.react",["BaseScrollableAreaContext","HiddenSubtreePassiveContext","react"],(function(a,b,c,d,e,f,g){"use strict";var h=d("react");b=d("react");var i=b.useContext,j=b.useEffect,k=b.useLayoutEffect,l=b.useRef;function a(a){var b=i(c("BaseScrollableAreaContext")),d=i(c("HiddenSubtreePassiveContext")),e=l(null),f=l(null),g=l(null),m=l(0),n=b[b.length-1];j(function(){var a=n.getDOMNode();if(a!=null){m.current=a.scrollTop;var b=function(){m.current=a.scrollTop};a.addEventListener("scroll",b,{passive:!0});return function(){a.removeEventListener("scroll",b,{passive:!0})}}},[n]);k(function(){if(e.current!=null&&!d.getCurrentState().hiddenOrBackgrounded_FIXME){var b=e.current.getBoundingClientRect();if(g.current!=null&&f.current!=null){var c=b.height-g.current.height;if(c===0||f.current===a.firstNotificationID){f.current=a.firstNotificationID;g.current=b;return}var h=n.getDOMNode();h!=null&&(h.scrollTop===m.current||g.current==null)&&(h.scrollTop+=c)}f.current=a.firstNotificationID;g.current=b}});return h.jsx("div",{ref:e,children:a.children})}a.displayName=a.name+" [from "+f.id+"]";g["default"]=a}),98);
__d("useHandleUpdateMultiNotifReadState",["CometNotificationsMutationLogger","CometNotificationsUpdateSeenStateMutation","recoverableViolation","useGetCancellableSeenStateCallback","useTriggerAccessibilityAlert"],(function(a,b,c,d,e,f,g){"use strict";var h="MAIN_SURFACE";function i(a){var b=a.accessibilityString,e=a.environment,f=a.queryID,g=a.receivedNotificationIdsRef,i=a.timestamp,j=a.triggerAccessibilityAlert;if(g==null||g.current==null)return;d("CometNotificationsUpdateSeenStateMutation").CometNotificationsUpdateSeenStateMutation(e,{environment:h,input:{environment:h,is_comet:!0,last_notif_sync_time:i,notif_ids:Array.from(g.current),query_id:f,source:"unknown",update_type:"MARK_ALL_READ"}},{mutationLogger:d("CometNotificationsMutationLogger").notificationMarkAllAsReadStart,onError:function(a){c("recoverableViolation")("Update read state (multi) mutation failed with an error: ","Notifications",{error:a})},onSuccess:function(){b!=null&&j!=null&&j(b)},updater:function(a){d("CometNotificationsUpdateSeenStateMutation").updateMultiNotifReadState(a),d("CometNotificationsUpdateSeenStateMutation").clearBadgeCount(a)}})}function a(a){var b=c("useTriggerAccessibilityAlert")();return c("useGetCancellableSeenStateCallback")(babelHelpers["extends"]({},a,{triggerAccessibilityAlert:b,updater:i}))}g["default"]=a}),98);
__d("useHandleUpdateMultiNotifSeenState",["CometNotificationsMutationLogger","CometNotificationsUpdateSeenStateMutation","recoverableViolation","useGetCancellableSeenStateCallback"],(function(a,b,c,d,e,f,g){"use strict";var h="MAIN_SURFACE";function i(a){var b=a.environment,e=a.queryID,f=a.receivedNotificationIdsRef;a=a.timestamp;if(f==null||f.current==null)return;d("CometNotificationsUpdateSeenStateMutation").CometNotificationsUpdateSeenStateMutation(b,{environment:h,input:{environment:h,is_comet:!0,last_notif_sync_time:a,notif_ids:Array.from(f.current),query_id:e,source:"unknown",update_type:"MARK_ALL_SEEN"}},{mutationLogger:d("CometNotificationsMutationLogger").notificationMarkAllAsSeenStart,onError:function(a){c("recoverableViolation")("Update seen state (multi) mutation failed with an error: ","Notifications",{error:a})},updater:function(a){d("CometNotificationsUpdateSeenStateMutation").updateMultiNotifSeenState(a),d("CometNotificationsUpdateSeenStateMutation").clearBadgeCount(a)}})}function a(a){return c("useGetCancellableSeenStateCallback")(babelHelpers["extends"]({},a,{updater:i}))}g["default"]=a}),98);